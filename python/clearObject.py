import setup_path
import airsim
import argparse
import random
import time
import os
import threading

asset_name = 'Birch_01'

def rmObj(asset):
    client = airsim.VehicleClient()
    residual = client.simListSceneObjects(name_regex=f"{asset}_airsim_.*")
    random.shuffle(residual)

    while residual:
        for b in residual:
            client.simDestroyObject(b)

        residual = client.simListSceneObjects(name_regex=f"{asset}_airsim_.*")

def main():
    parser = argparse.ArgumentParser(
        description='Clear objects generated by AirSim API')
    optional = parser._action_groups.pop()
    optional.add_argument("-a", "--asset", dest="asset",
                          help="Asset to clear. If not set, script will clear all airsim-generated assets",
                          metavar="ASSET", default=".*")

    args = parser.parse_args()

    client = airsim.VehicleClient()
    assetList = client.simListSceneObjects(name_regex=f"{args.asset}_airsim_.*")

    if not assetList:
        print("NO ASSET WAS FOUND. PLEASE CHECK AGAIN.")
    else:
        startTime = time.time()

        t1 = threading.Thread(target=rmObj(args.asset))
        t2 = threading.Thread(target=rmObj(args.asset))
        t3 = threading.Thread(target=rmObj(args.asset))
        t4 = threading.Thread(target=rmObj(args.asset))
        t5 = threading.Thread(target=rmObj(args.asset))

        t1.start()
        t2.start()
        t3.start()
        t4.start()
        t5.start()

        t1.join()
        t2.join()
        t3.join()
        t4.join()
        t5.join()

        if args.asset == ".*":
            print("All airsim-generated assets cleared!")
        else:
            print(f"All {args.asset} cleared!")
    
        ellapsed = round(time.time() - startTime)
        print(f"This took {ellapsed} seconds")

if __name__ == "__main__":
    main()